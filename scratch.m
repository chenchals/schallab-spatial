darwin = {'D-Uprobe-MG-021616a-FEF.plx''D-Uprobe-MG-021916a-FEF.plx''D-Uprobe-MG-022216a-FEF.plx''D-Uprobe-MG-022316a-FEF.plx''D-Uprobe-MG-022516a-FEF.plx''D-Uprobe-MG-022616a-FEF.plx''D-Uprobe-MG-022916a-FEF.plx''D-Uprobe-MG-030316a-F2-FEF.plx''D-Uprobe-MG-030716a-F2-FEF.plx''D-Uprobe-MG-030816a-F2-FEF.plx''D-Uprobe-MG-031016a-F2-FEF.plx''D-Uprobe-MG-031116a-F2-FEF.plx'};helmholtz={'H-MG-120114a.plx''H-Uprobe-MG-120114b.plx''H-Uprobe-MG-120814a.plx''H-Uprobe-MG-121014a.plx''H-Uprobe-MG-121514a.plx''H-MG-121714a.plx''H-Uprobe-MG-010615a.plx''H-Uprobe-MG-012015a.plx''H-Uprobe-MG-012715a.plx''H-Uprobe-MG-021315a.plx''H-Uprobe-MG-022615a.plx''H-Uprobe-MG-031215a.plx'    };Z = helmholtz;toks=regexp(Z,'.*-(\d*[ab]).*','tokens')tok=cellfun(@(x) datestr(datenum(x{1},'mmddyya'),'yyyy-mm-dda') ,toks,'UniformOutput',false)% convert struct array to a struct with % a char field value ad field name% nhpSessions = % %   1×19 struct array with fields:% %     session%     mutilSdf%     info%     channelMap% ==> %%  nhpSessions(1)%% ans = % %   struct with fields:% %        session: 'jp054n01'%       mutilSdf: [1×1 struct]%           info: [1×27 table]%     channelMap: [32×1 double]load('clustering/schalllab-spatial/processed/testParfor.mat');finalVar = struct();for ro =1:numel(nhpSessions)    finalVar.(nhpSessions(ro).session) = nhpSessions(ro);end% cell array of structsZZ=nhpSessions;O = struct;for ii = 1:numel(ZZ)    t=ZZ{ii};    fn = fieldnames(t);    for f = 1:numel(fn)       O.(t.session).(fn{f})=t.(fn{f});    endendO2 = struct;for ii = 1:numel(ZZ)       O2.(ZZ{ii}.session)=ZZ{ii};end